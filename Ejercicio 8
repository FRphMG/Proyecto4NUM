def Newton(f, df, Tol, N, x0):
    Iter = 0
    while Iter <= N:
        fx = f(x0)
        dfx = df(x0)
        xn = x0 - (fx / float(dfx))  # Fórmula de Newton
        #Imprime cada iteración hasta que se cumpla el número de iteraciones pedidas/el while)
        print(f"Iteración {Iter+1}: x{Iter} = {x0}, f(x) = {fx}, x_n = {xn}")
        
        # Condición de convergencia
        if abs(f(xn)) <= Tol and abs(xn - x0) <= Tol:
            print("Tu raiz es " + str(xn))
            return xn
        
        x0 = xn  # Actualización de x0
        Iter += 1
    
    print("El valor aproximado de tu raiz es " + str(xn))

# Ejemplo de uso
f = lambda x: x**2 - 6  # Función a encontrar la raíz
df = lambda x: 2*x  # Derivada de la función
Newton(f, df, 1E-5, 5, 1.0)  # Llamada al método de Newton
